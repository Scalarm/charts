apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - mountPath: /scalarm/config/puma.rb
            subPath: puma.rb
            name: conf
            readOnly: true 
          - mountPath: /scalarm/config/secrets.yml
            subPath: secrets.yml
            name: conf
            readOnly: true    
          - mountPath: /scalarm/config/mongoid.yml
            subPath: mongoid.yml
            name: conf
            readOnly: true    	
          - mountPath: /scalarm/config/server.crt
            subPath: server.crt
            name: certs
            readOnly: true   
          - mountPath: /scalarm/config/server.key
            subPath: server.key
            name: certs
            readOnly: true   			
        env:
          - name: EXPERIMENT_MANAGER_PORT
            value: "{{ .Values.env.expm_port }}"
          - name: RAILS_ENV
            value: "{{ .Values.env.rails_env }}"
          - name: SECRET_KEY_BASE
            value: "{{ .Values.env.secret_key_base }}"
          - name: INFORMATION_SERVICE_URL
            value: "{{ .Values.env.inf_svc_url}}"
          - name: INFORMATION_SERVICE_LOGIN
            value: "{{ .Values.env.inf_svc_login}}"
          - name: INFORMATION_SERVICE_PASSWORD
            value: "{{ .Values.env.inf_svc_pass}}"
          - name: SIDEKIQ_USERNAME
            value: "{{ .Values.env.skq_login}}"
          - name: SIDEKIQ_PASSWORD
            value: "{{ .Values.env.skq_pass}}"
          - name: REDIS_HOST
            value: "{{ .Release.Name}}-{{ .Values.env.redis_host}}"
          - name: REDIS_PORT
            value: "{{ .Values.env.redis_port}}"
          - name: MONGO_ADDRESS
            value: "{{ .Release.Name}}-{{ .Values.env.mongo_host}}:{{ .Values.env.mongo_port}}"
          - name: MONGO_DB_NAME
            value: "{{ .Values.env.mongodb_name}}"
        command:
          - "sh"
          - "-c"
          - >
            /bin/bash -c 'source /usr/local/rvm/scripts/rvm && rake service:start && tail -f log/${RAILS_ENV}.log'
        lifecycle:
          postStart:
            exec:
             command:
                - "/usr/bin/bash"
                - "-c"
                - >
                  source /usr/local/rvm/scripts/rvm && rails r "u = ScalarmUser.new(login: '"{{ .Values.env.user_login}}"'); u.password = '"{{ .Values.env.user_pass}}"'; u.save"				
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: conf
        configMap:
          name: config
      - name: certs
        configMap:
          name: certs